"""
假设有n个活动,这些活动要占用用同一一片片场地,而而场地在某时
刻只能供一一个活动使用用。
每个活动都有一一个开始时间s i 和结束时间f i (题目目中时间以整数
表示),表示活动在[s i , f i )区间占用用场地。
问:安排哪些活动能够使该场地举办的活动的个数最多?

贪心心结论:最先结束的活动一一定是最优解的一一部分。
证明:假设a是所有活动中最先结束的活动,b是最优解中最先结束的活动。
如果a=b,结论成立立。
如果a≠b,则b的结束时间一一定晚于a的结束时间,则此时用用a替换掉最优解中
的b,a一一定不不与最优解中的其他活动时间重叠,因此替换后的解也是最优解。
"""
activities = [(1, 4), (3, 5), (0, 6), (5, 7), (3, 9), (5, 9), (6, 10), (8, 11), (8, 12), (2, 14), (12, 16)]
# 保证活动是按照结束时间排好序的
activities.sort(key=lambda x: x[1])

def activity_selection(a):
    res = [a[0]]
    for i in range(1,len(a)):
        if a[i][0] >= res[-1][1]:    # 当前活动的开始时间小于等于最后一个入选活动的结束时间
            # 不冲突
            res.append(a[i])
    return res

print(activity_selection(activities))  #　[(1, 4), (5, 7), (8, 11), (12, 16)]